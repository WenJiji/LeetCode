class Solution {
public:
	int findKthLargest(vector<int>& nums, int k) {
		sort(nums.begin(), nums.end());
		return nums.at(nums.size()-k);
	}
};

//class Solution {
//public:
//	int findKthLargest(vector<int>& nums, int k) {
//		multiset<int> mset;
//		int n = nums.size();
//		for (int i = 0; i < n; i++) {
//			mset.insert(nums[i]);
//			if (mset.size() > k)
//				mset.erase(mset.begin());
//		}
//		return *mset.begin();
//	}
//};
